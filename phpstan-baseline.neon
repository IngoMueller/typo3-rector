parameters:
	ignoreErrors:
		-
			message: "#^Function \"class_exists\\(\\)\" cannot be used/left in the code$#"
			count: 1
			path: src/NodeFactory/InitializeArgumentsClassMethodFactory.php

		-
			message: "#^Instead of \"new ClassReflection\\(\\)\" use ReflectionProvider service or \"\\(new PHPStan\\\\Reflection\\\\ClassReflection\\(\\<desired_type\\>\\)\\)\" for static reflection to work$#"
			count: 1
			path: src/NodeFactory/InitializeArgumentsClassMethodFactory.php

		-
			message: "#^Instead of \"instanceof/is_a\\(\\)\" use ReflectionProvider service or \"\\(new ObjectType\\(\\<desired_type\\>\\)\\)\\-\\>isSuperTypeOf\\(\\<element_type\\>\\)\" for static reflection to work$#"
			count: 1
			path: src/Rector/v11/v0/ExtbaseControllerActionsMustReturnResponseInterfaceRector.php

		-
			message:
				"""
					#^"switch \\(\\$methodName\\) \\{
					    case 'gif_compress'\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createStaticCall\\(\\\\TYPO3\\\\CMS\\\\Core\\\\Imaging\\\\GraphicalFunctions\\:\\:class, 'gifCompress', \\$node\\-\\>args\\);
					    case 'png_to_gif_by_imagemagick'\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createStaticCall\\(\\\\TYPO3\\\\CMS\\\\Core\\\\Imaging\\\\GraphicalFunctions\\:\\:class, 'pngToGifByImagemagick', \\$node\\-\\>args\\);
					    case 'read_png_gif'\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createStaticCall\\(\\\\TYPO3\\\\CMS\\\\Core\\\\Imaging\\\\GraphicalFunctions\\:\\:class, 'readPngGif', \\$node\\-\\>args\\);
					    case 'inArray'\\:
					    case 'removeArrayEntryByValue'\\:
					    case 'keepItemsInArray'\\:
					    case 'remapArrayKeys'\\:
					    case 'arrayDiffAssocRecursive'\\:
					    case 'naturalKeySortRecursive'\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createStaticCall\\(\\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\ArrayUtility\\:\\:class, \\$methodName, \\$node\\-\\>args\\);
					    case 'array_merge'\\:
					        \\[\\$arg1, \\$arg2\\] \\= \\$node\\-\\>args;
					        return new \\\\PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Plus\\(\\$arg1\\-\\>value, \\$arg2\\-\\>value\\);
					    case 'getThisUrl'\\:
					        // TODO\\: This is not implemented yet\\. What is the correct equivalent within getIndpEnv
					        break;
					    case 'cleanOutputBuffers'\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createStaticCall\\(\\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility\\:\\:class, 'flushOutputBuffers'\\);
					\\}" is forbidden to use$#
				"""
			count: 1
			path: src/Rector/v8/v0/RefactorRemovedMethodsFromGeneralUtilityRector.php

		-
			message: "#^Use \"Rector\\\\Core\\\\Rector\\\\AbstractRector\\-\\>isName\\('value'\\)\" method call over \"Rector\\\\Core\\\\Rector\\\\AbstractRector\\-\\>getName\\(\\) \\=\\=\\= 'value'\" comparison$#"
			count: 1
			path: src/Rector/v8/v0/RemoveLangCsConvObjAndParserFactoryRector.php

		-
			message:
				"""
					#^"switch \\(\\$this\\-\\>getName\\(\\$node\\-\\>name\\)\\) \\{
					    case self\\:\\:COMPAT_VERSION\\:
					        return new \\\\PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\GreaterOrEqual\\(\\$this\\-\\>nodeFactory\\-\\>createStaticCall\\(\\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\VersionNumberUtility\\:\\:class, 'convertVersionNumberToInteger', \\[new \\\\PhpParser\\\\Node\\\\Expr\\\\ConstFetch\\(new \\\\PhpParser\\\\Node\\\\Name\\('TYPO3_branch'\\)\\)\\]\\), \\$this\\-\\>nodeFactory\\-\\>createStaticCall\\(\\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\VersionNumberUtility\\:\\:class, 'convertVersionNumberToInteger', \\$node\\-\\>args\\)\\);
					    case self\\:\\:CONVERT_MICROTIME\\:
					        \\$funcCall \\= \\$this\\-\\>nodeFactory\\-\\>createFuncCall\\('explode', \\[new \\\\PhpParser\\\\Node\\\\Scalar\\\\String_\\(' '\\), \\$node\\-\\>args\\[0\\]\\-\\>value\\]\\);
					        \\$this\\-\\>addNodeBeforeNode\\(new \\\\PhpParser\\\\Node\\\\Stmt\\\\Expression\\(new \\\\PhpParser\\\\Node\\\\Expr\\\\Assign\\(new \\\\PhpParser\\\\Node\\\\Expr\\\\Variable\\(self\\:\\:PARTS\\), \\$funcCall\\)\\), \\$node\\);
					        return \\$this\\-\\>nodeFactory\\-\\>createFuncCall\\('round', \\[new \\\\PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Mul\\(new \\\\PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Plus\\(new \\\\PhpParser\\\\Node\\\\Expr\\\\ArrayDimFetch\\(new \\\\PhpParser\\\\Node\\\\Expr\\\\Variable\\(self\\:\\:PARTS\\), new \\\\PhpParser\\\\Node\\\\Scalar\\\\LNumber\\(0\\)\\), new \\\\PhpParser\\\\Node\\\\Expr\\\\ArrayDimFetch\\(new \\\\PhpParser\\\\Node\\\\Expr\\\\Variable\\(self\\:\\:PARTS\\), new \\\\PhpParser\\\\Node\\\\Scalar\\\\LNumber\\(1\\)\\)\\), new \\\\PhpParser\\\\Node\\\\Scalar\\\\LNumber\\(1000\\)\\)\\]\\);
					    case self\\:\\:RAW_URL_ENCODE_JS\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createFuncCall\\('str_replace', \\['%%20', ' ', \\$this\\-\\>nodeFactory\\-\\>createFuncCall\\('rawurlencode', \\$node\\-\\>args\\)\\]\\);
					    case self\\:\\:RAW_URL_ENCODE_FP\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createFuncCall\\('str_replace', \\['%%2F', '/', \\$this\\-\\>nodeFactory\\-\\>createFuncCall\\('rawurlencode', \\$node\\-\\>args\\)\\]\\);
					    case self\\:\\:LCFIRST\\:
					        return \\$this\\-\\>nodeFactory\\-\\>createFuncCall\\(self\\:\\:LCFIRST, \\$node\\-\\>args\\);
					    case self\\:\\:GET_MAXIMUM_PATH_LENGTH\\:
					        return new \\\\PhpParser\\\\Node\\\\Expr\\\\ConstFetch\\(new \\\\PhpParser\\\\Node\\\\Name\\('PHP_MAXPATHLEN'\\)\\);
					\\}" is forbidden to use$#
				"""
			count: 1
			path: src/Rector/v8/v1/RefactorVariousGeneralUtilityMethodsRector.php

		-
			message: "#^Use \"Rector\\\\Core\\\\Rector\\\\AbstractRector\\-\\>isName\\('value'\\)\" method call over \"Rector\\\\Core\\\\Rector\\\\AbstractRector\\-\\>getName\\(\\) \\=\\=\\= 'value'\" comparison$#"
			count: 2
			path: src/Rector/v8/v7/ChangeAttemptsParameterConsoleOutputRector.php

